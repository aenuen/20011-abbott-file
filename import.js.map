{"version":3,"file":"import.js","sources":["src/FFHandle/dataToFile.ts","src/FFHandle/deleteFile.ts","src/FFHandle/deleteFolder.ts","src/FFHandle/fileParse.ts","src/FFHandle/getStats.ts","src/FFHandle/isExists.ts","src/FFHandle/isFile.ts","src/FFHandle/isFolder.ts","src/FFHandle/readDownFile.ts","src/FFHandle/rename.ts"],"sourcesContent":["import fs from 'fs'\n\n/**\n * @description 将数据保存成文件\n * @param {*} fData 文件数据\n * @param {string} fFile 文件路径\n * @returns {Promise<String>}\n */\nexport const dataToFile = (fData: any, fFile: string): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(fFile, fData, (err) => {\n      err ? reject('') : resolve(fFile)\n    })\n  })\n}\n","import fs from 'fs'\n\n/**\n * @description 删除文件\n * @param {string} fFile 文件路径\n * @returns {Promise<Boolean>}\n */\nexport const deleteFile = (fFile: string): Promise<boolean> => {\n  return new Promise((resolve, reject) => {\n    if (fFile) {\n      if (fs.existsSync(fFile)) {\n        fs.unlink(fFile, (err) => {\n          err ? reject(false) : resolve(true)\n        })\n      } else {\n        resolve(true)\n      }\n    }\n  })\n}\n","import fs from 'fs'\n\n/**\n * @description 删除文件夹\n * @param {string} fFolder 文件夹路径\n * @returns {Promise<Boolean>}\n */\nexport const deleteFolder = (fFolder: string): Promise<boolean> => {\n  return new Promise((resolve, reject) => {\n    if (fs.existsSync(fFolder)) {\n      fs.rmdir(fFolder, {recursive: true}, (err) => {\n          err ? reject(false) : resolve(true)\n        }\n      )\n    } else {\n      resolve(true)\n    }\n  })\n}\n","import fs from 'fs'\n\nexport class FileParse {\n  // 定义变量\n  private suffix!: string;\n  private path!: string;\n  private filePath!: string;\n  private newFile!: string;\n  private originalName!: string;\n\n  // 预先处理\n  constructor(aFile: any) {\n    this.parseFile(aFile)\n  }\n\n  // 解析文件\n  parseFile(file: Record<string | number | symbol, any>) {\n    // noinspection SpellCheckingInspection\n    const {destination: des, filename = '', originalname: originalName, path = ''} = file\n    const suffix = originalName.split('.')[1] || ''\n    this.suffix = suffix\n    this.path = path\n    this.filePath = `${des}${filename}.${suffix}`\n    this.newFile = `${filename}.${suffix}`\n    this.originalName = originalName\n  }\n\n  // 解析\n  parse() {\n    return new Promise(async (resolve, reject) => {\n      if (this.suffix) {\n        if (fs.existsSync(this.path) && !fs.existsSync(this.filePath)) {\n          fs.renameSync(this.path, this.filePath)\n        }\n        resolve(this)\n      } else {\n        reject(new Error('上文件的后缀名无效'))\n      }\n    })\n  }\n}\n","import fs from 'fs'\n\n/**\n * @description 获取目录或文件的系统明细\n * @param {string} fOrFPath 文件（夹）路径\n * @returns {Promise<Record<string | number | symbol, any>>}\n */\nexport const getStats = (fOrFPath: string): Promise<Record<string | number | symbol, any>> => {\n  return new Promise((resolve, reject) => {\n    fs.stat(fOrFPath, (err, stats) => {\n      err ? reject({}) : resolve(stats)\n    })\n  })\n}\n","import fs from \"fs\";\n\n/**\n * @description 文件或文件夹是否存在\n * @param fOrFPath 文件（夹）路径\n * @returns {Promise<Boolean>}\n */\nexport const isExists = (fOrFPath: string): Promise<boolean> => {\n  return new Promise((resolve, reject) => {\n    const result = fs.existsSync(fOrFPath)\n    result ? resolve(true) : reject(false)\n  })\n}\n","import fs from 'fs'\n\n/**\n * @description 是否文件\n * @param {String} fFile 文件路径\n * @returns {Promise<Boolean>}\n */\nexport const isFile = (fFile: string): Promise<boolean> => {\n  return new Promise((resolve, reject) => {\n    fs.stat(fFile, (err, stats) => {\n      err ? reject(false) : stats.isFile() ? resolve(true) : reject(false)\n    })\n  })\n}\n","import fs from 'fs'\n\n/**\n * @description 是否文件夹\n * @param {String} fFolder 文件夹路径\n * @return {Promise<Boolean>}\n */\nexport const isFolder = (fFolder: string): Promise<boolean> => {\n  return new Promise((resolve, reject) => {\n    fs.stat(fFolder, (err, stats) => {\n      err ? reject(false) : stats.isDirectory() ? resolve(true) : reject(false)\n    })\n  })\n}\n","import fs from 'fs'\n\n/**\n * @description 目录下所有的文件(不包含文件夹)\n * @param {string} folder 文件夹路径\n * @returns {Promise<Array>}\n */\nexport const readDownFile = (folder: string): Promise<Array<any>> => {\n  return new Promise((resolve, reject) => {\n    fs.readdir(folder, (err, files) => {\n      err ? reject([]) : resolve(files)\n    })\n  })\n}\n","import fs from 'fs'\n\n/**\n * @description 重命名（移动）文件（夹）\n * @param {string} fOld 原文件（夹）路径\n * @param {string} fNew 新文件（夹）路径\n * @return {Promise<Boolean>}\n */\nexport const rename = (fOld: string, fNew: string): Promise<boolean> => {\n  return new Promise((resolve, reject) => {\n    fs.rename(fOld, fNew, (err) => {\n      err ? reject(false) : resolve(true)\n    })\n  })\n}\n"],"names":[],"mappings":"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"}